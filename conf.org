* Emacs customization in org mode

#+begin_src emacs-lisp
(message "Running org configuration")
#+end_src


* Basic customizations

#+begin_src emacs-lisp
  ;; Basics
  (setq inhibit-startup-message t)
  (scroll-bar-mode -1)
  (set-fringe-mode 10)
  (tool-bar-mode -1)
  (setq visible-bell t)

  (setq vc-follow-symlinks t) ;; dont bug me about symlinks
  (recentf-mode 1) ;; give me a list of recently visited files
  (setq history-length 50) ;; remember 50 minibuffer entries
  (savehist-mode 1) ;; save my minibuffer history
  (save-place-mode 1) ;; go back to previous location in files
  (global-auto-revert-mode 1) ;; track changes on disk
#+end_src

* Dont pollute the init.el with custom variabels at the end of the file
#+begin_src emacs-lisp
  ;; Keep all the custom var separate
  (setq custom-file (locate-user-emacs-file "custom-vars.el"))
  (load custom-file 'noerror 'nomessage)
#+end_src



* Set up package manager and archives

#+begin_src emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			   ("org" . "https://orgmode.org/elpa/")
			   ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)

  (unless package-archive-contents (package-refresh-contents))
#+end_src


* Set up use-package
#+begin_src emacs-lisp
	;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
      (package-install 'use-package))

  ;; use-package
  (require 'use-package)
  (setq use-package-always-ensure t)

  (use-package auto-package-update
    :custom
    (auto-package-update-interval 7)
    (auto-package-update-prompt-before-update t)
    (auto-package-update-hide-results t)
    :config
    (auto-package-update-maybe)
    (auto-package-update-at-time "09:00"))
#+end_src




* tangle everything
#+PROPERTY: header-args :tangle yes

* org mode customizations

** enable shift selection of regions

#+begin_src emacs-lisp
  (setq org-support-shift-select t)
#+end_src

* org tempo

Set up shortcuts for code blocks
- emacs-lisp
- python

#+begin_src emacs-lisp 
  (require 'org-tempo)

  (tempo-define-template "inline-elisp" ; just some name for the template
	       '("#+begin_src emacs-lisp" n p n
		 "#+end_src" n)
	       "<el"
	       "Insert emacs-lisp code block" ; documentation
	       'org-tempo-tags)

   (tempo-define-template "inline-python" ; just some name for the template
			  '("#+begin_src python" n p n
		 "#+end_src" n)
	       "<py"
	       "Insert python code block" ; documentation
	       'org-tempo-tags) 
#+end_src


